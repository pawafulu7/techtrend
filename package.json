{
  "name": "techtrend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "prisma generate && next build",
    "vercel-build": "prisma generate && prisma migrate deploy && next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "eslint . --fix --ext .ts,.tsx",
    "analyze": "cross-env ANALYZE=true npm run build",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "test": "npm run test:node && npm run test:dom",
    "test:report": "npm test 2>&1 | node scripts/test-reporter.js",
    "test:node": "jest --config jest.config.node.js",
    "test:dom": "jest --config jest.config.dom.js",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage --config jest.config.node.js",
    "test:unit": "jest --testPathPattern=unit",
    "test:react": "jest -c jest.config.dom.js",
    "test:all": "npm test && npm run test:e2e",
    "test:changed": "jest -o",
    "test:coverage:update": "jest --coverage --updateSnapshot",
    "test:coverage:report": "jest --coverage && npx open-cli coverage/index.html",
    "test:coverage:ci": "jest --coverage --ci --maxWorkers=2",
    "prisma:migrate": "prisma migrate dev",
    "prisma:generate": "prisma generate",
    "postinstall": "prisma generate",
    "prisma:studio": "prisma studio",
    "prisma:seed": "prisma db seed",
    "prisma:seed:full": "tsx prisma/seed-full.ts",
    "prisma:export": "tsx scripts/export-db-to-seed.ts",
    "migrate:production": "bash scripts/deploy-migrations.sh",
    "migrate:production:check": "DATABASE_URL=\"$PRODUCTION_DATABASE_URL\" npx prisma migrate status",
    "scheduler:start": "pm2 start ecosystem.config.js",
    "scheduler:stop": "pm2 stop techtrend-scheduler",
    "scheduler:restart": "pm2 restart techtrend-scheduler",
    "scheduler:logs": "pm2 logs techtrend-scheduler",
    "scheduler:start:local": "pm2 start ecosystem.local.config.js --only techtrend-scheduler-local",
    "scheduler:stop:local": "pm2 stop techtrend-scheduler-local",
    "scheduler:restart:local": "pm2 restart techtrend-scheduler-local",
    "scheduler:logs:local": "pm2 logs techtrend-scheduler-local",
    "scheduler:dev": "tsx scripts/scheduled/scheduler.ts",
    "scheduler:prod": "tsx scripts/scheduled/scheduler.ts",
    "scripts:collect": "tsx scripts/scheduled/collect-feeds.ts",
    "scripts:summarize": "tsx scripts/maintenance/generate-summaries.ts",
    "enrich:corporate": "tsx scripts/enrich-corporate-blog-content.ts",
    "enrich:corporate:dry": "tsx scripts/enrich-corporate-blog-content.ts --dry-run",
    "claude:summarize": "tsx scripts/manual/generate-summaries-claude.ts",
    "claude:compare": "tsx scripts/manual/compare-summaries.ts",
    "claude:tags:batch": "tsx scripts/manual/generate-tags-claude-batch.ts",
    "test:quality": "jest __tests__/utils/content-quality-checker.test.ts",
    "quality:check": "tsx scripts/manual/check-summary-quality.ts",
    "quality:report": "tsx scripts/manual/generate-quality-report.ts",
    "detect:problematic-summaries": "tsx scripts/manual/detect-problematic-summaries.ts",
    "regenerate:english-mixed": "tsx scripts/manual/regenerate-english-mixed.ts",
    "update:tech-terms": "tsx scripts/manual/update-tech-terms.ts",
    "report:quality-metrics": "tsx scripts/manual/generate-quality-report.ts",
    "regenerate:low-quality": "tsx scripts/manual/regenerate-low-quality-summaries.ts",
    "regenerate:quality-fallback": "tsx scripts/manual/regenerate-low-quality-with-fallback.ts",
    "regenerate:force-all": "tsx scripts/manual/force-regenerate-all.ts",
    "regenerate:under-40": "tsx scripts/manual/regenerate-under-40.ts",
    "regenerate:all-unified": "tsx scripts/manual/regenerate-all-unified.ts",
    "migrate:v7:staged": "tsx scripts/migration/migrate-v7-staged.ts",
    "migrate:v7:auto": "tsx scripts/migration/migrate-v7-auto.ts",
    "techtrend": "tsx lib/cli/index.ts",
    "add-article": "tsx scripts/manual/add-article-manually.ts",
    "test:db:up": "docker compose -f docker-compose.test.yml up -d",
    "test:db:down": "docker compose -f docker-compose.test.yml down",
    "test:db:setup": "DATABASE_URL=postgresql://postgres@localhost:5433/techtrend_test npx prisma migrate deploy && DATABASE_URL=postgresql://postgres@localhost:5433/techtrend_test npx tsx prisma/seed-test.ts",
    "test:db:reset": "DATABASE_URL=postgresql://postgres@localhost:5433/techtrend_test npx prisma migrate reset --force",
    "test:e2e": "playwright test",
    "test:e2e:report": "npm run test:e2e 2>&1 | node scripts/e2e-reporter.js",
    "test:e2e:smoke": "playwright test --grep @smoke",
    "test:e2e:critical": "playwright test --grep @critical",
    "test:e2e:quick": "playwright test",
    "test:e2e:parallel": "playwright test --workers=3",
    "test:e2e:fast": "playwright test --project=chromium --workers=3",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:chromium": "playwright test --project=chromium",
    "test:e2e:full": "npm run test:db:up && npm run test:db:setup && npm run test:e2e",
    "test:e2e:clean": "npm run test:db:down",
    "test:e2e:vrt": "playwright test visual-regression",
    "test:e2e:vrt:update": "playwright test visual-regression --update-snapshots",
    "test:e2e:vrt:headed": "playwright test visual-regression --headed",
    "playwright:install": "playwright install",
    "playwright:report": "playwright show-report",
    "migrate:version6": "tsx scripts/manual/migrate-to-version6.ts",
    "migrate:version6:critical": "tsx scripts/manual/migrate-to-version6.ts --priority=critical",
    "migrate:version6:substandard": "tsx scripts/manual/migrate-to-version6.ts --priority=substandard",
    "fix:short-content": "tsx scripts/manual/fix-short-content-summaries.ts",
    "collect:local": "dotenv -e .env -- tsx scripts/scheduled/collect-feeds.ts",
    "summarize:local": "dotenv -e .env -- tsx scripts/maintenance/generate-summaries.ts",
    "scheduler:local": "dotenv -e .env -- tsx scripts/scheduled/scheduler.ts",
    "docker:dev": "docker compose -f docker-compose.app.yml up app",
    "docker:build": "docker compose -f docker-compose.app.yml exec -e NODE_ENV=production app npm run build",
    "docker:lint": "docker compose -f docker-compose.app.yml exec app npm run lint",
    "docker:test": "docker compose -f docker-compose.app.yml exec app npm test",
    "docker:bash": "docker compose -f docker-compose.app.yml exec app sh",
    "docker:setup": "bash scripts/docker-dev-setup.sh",
    "docker:clean": "docker compose -f docker-compose.app.yml down -v",
    "docker:restart": "docker compose -f docker-compose.app.yml restart app",
    "docker:logs": "docker compose -f docker-compose.app.yml logs -f app",
    "docker:ps": "docker compose -f docker-compose.app.yml ps"
  },
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.0.0",
    "@google/generative-ai": "^0.24.1",
    "@prisma/client": "^6.16.1",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@tanstack/react-query": "^5.87.4",
    "@tanstack/react-query-devtools": "^5.87.4",
    "@types/bcryptjs": "^2.4.6",
    "@types/sanitize-html": "^2.16.0",
    "axios": "^1.12.1",
    "bcryptjs": "^2.4.3",
    "cheerio": "^1.1.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "commander": "^14.0.1",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "idb": "^8.0.3",
    "ioredis": "^5.7.0",
    "lucide-react": "^0.525.0",
    "next": "15.5.2",
    "next-auth": "^5.0.0-beta.25",
    "next-themes": "^0.4.6",
    "node-cron": "^4.2.1",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.10.1",
    "pino": "^9.9.5",
    "pino-pretty": "^13.1.1",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "react-hook-form": "^7.62.0",
    "recharts": "^3.2.0",
    "resend": "^6.0.3",
    "rss-parser": "^3.13.0",
    "sanitize-html": "^2.17.0",
    "tailwind-merge": "^3.3.1",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^4.1.8"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@faker-js/faker": "^9.9.0",
    "@mswjs/data": "^0.16.2",
    "@next/bundle-analyzer": "^15.5.3",
    "@playwright/test": "^1.54.2",
    "@tailwindcss/postcss": "^4.1.13",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.3.3",
    "@types/pino": "^7.0.4",
    "@types/react": "^19.1.13",
    "@types/react-dom": "^19.1.9",
    "@types/uuid": "^10.0.0",
    "cross-env": "^10.0.0",
    "dotenv": "^17.2.2",
    "dotenv-cli": "^10.0.0",
    "eslint": "^9.35.0",
    "eslint-config-next": "15.4.4",
    "eslint-config-prettier": "^10.1.8",
    "jest": "^30.1.3",
    "jest-environment-jsdom": "^30.1.2",
    "jest-mock-extended": "^4.0.0",
    "msw": "^2.11.2",
    "prettier": "^3.6.2",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "prisma": "^6.16.1",
    "tailwindcss": "^4",
    "tsx": "^4.20.5",
    "tw-animate-css": "^1.3.8",
    "typescript": "^5.8.3",
    "undici": "^7.16.0",
    "web-streams-polyfill": "^4.2.0",
    "whatwg-fetch": "^3.6.20"
  }
}
