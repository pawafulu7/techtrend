services:
  postgres-test:
    image: postgres:15-alpine
    container_name: techtrend-postgres-test
    environment:
      POSTGRES_DB: techtrend_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "127.0.0.1:5434:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: "no"

  redis-test:
    image: redis:7-alpine
    container_name: techtrend-redis-test
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: "no"

  node-ci:
    image: node:20-alpine
    container_name: techtrend-node-ci
    working_dir: /app
    env_file:
      - .env
    environment:
      HOST_UID: ${HOST_UID:-1000}
      HOST_GID: ${HOST_GID:-1000}
    volumes:
      - ./:/app
      # 匿名ボリュームで node_modules をコンテナ側に隔離（ホストを汚さない）
      - /app/node_modules
      # Next.js のビルド成果物をホストではなく匿名ボリュームへ
      - /app/.next
      # テスト出力・一時ファイルもホストから隔離
      - /app/coverage
      - /app/test-results
      - /app/playwright-report
      - /app/tmp
      - /app/.cache
      # 注意: /app/node_modules/.prisma を匿名ボリュームにすると
      # npm ci のクリーンアップで rmdir EBUSY が発生するためマウントしない
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - default

  playwright-e2e:
    image: mcr.microsoft.com/playwright:v1.55.0-jammy
    container_name: techtrend-playwright-e2e
    working_dir: /app
    env_file:
      - .env
    environment:
      HOST_UID: ${HOST_UID:-1000}
      HOST_GID: ${HOST_GID:-1000}
    volumes:
      - ./:/app
      # Playwright の出力をホストから隔離
      - /app/test-results
      - /app/playwright-report
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - default

volumes:
  postgres_test_data:
    name: techtrend_postgres_test_data
  redis_test_data:
    name: techtrend_redis_test_data

networks:
  default:
    name: techtrend_test_network
