version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: techtrend-app
    user: "1000:1000"
    volumes:
      # Source code mount for hot reload
      - ./:/app
      # Persist node_modules in named volume
      - app_node_modules:/app/node_modules
      # Exclude .next from bind mount
      - /app/.next
      # Exclude .prisma to avoid permission issues
      - /app/node_modules/.prisma
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres_dev_password@postgres:5432/techtrend_dev
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    networks:
      - techtrend_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    stdin_open: true
    tty: true

  postgres:
    extends:
      file: docker-compose.dev.yml
      service: postgres
    networks:
      - techtrend_network

  redis:
    extends:
      file: docker-compose.dev.yml
      service: redis
    networks:
      - techtrend_network

volumes:
  app_node_modules:
    name: techtrend_app_node_modules
  app_next:
    name: techtrend_app_next
  postgres_data:
    external: true
    name: techtrend_postgres_data
  redis_data:
    external: true
    name: techtrend_redis_data

networks:
  techtrend_network:
    external: true
    name: techtrend_network